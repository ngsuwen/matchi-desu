{"version":3,"sources":["components/Profile/ProfileCard.js","components/Profile/ProfileApi.js","components/Ad/AdApi.js","components/Ad/AdCarousel.js","App.js","index.js"],"names":["TinderProfileCard","data","className","map","character","onSwipe","dir","direction","name","id","localStorage","setItem","onCardLeftScreen","console","log","Card","sx","width","height","padding","boxShadow","CardActionArea","CardMedia","component","image","display_picture","alt","CardContent","Typography","gutterBottom","variant","style","overflow","color","description","options","method","headers","fetchData","a","dataArray","i","Math","floor","random","apiEndPoint","URL","fetch","response","json","push","ProfileCard","useState","setData","useEffect","getData","FetchData","styles","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","element","index","App","ReactDOM","render","document","getElementById"],"mappings":"6SAQe,SAASA,EAAT,GAAsC,IAATC,EAAQ,EAARA,KAYxC,OACI,qBAAKC,UAAU,UAAf,SACKD,EAAKE,KAAI,SAACC,GAAD,OACN,cAAC,IAAD,CAAYF,UAAU,QAA6BG,QAAS,SAACC,GAAD,OAbxDC,EAawED,EAb7DE,EAakEJ,EAAUI,KAbtEC,EAa4EL,EAAUK,QAZjG,UAAdF,GACAG,aAAaC,QAAQF,EAAID,IAFlB,IAACD,EAAWC,EAAMC,GAa2FG,iBAAkB,kBAP1HJ,EAO2IJ,EAAUI,UANrKK,QAAQC,IAAIN,EAAO,qBADJ,IAACA,GAOR,SACI,cAACO,EAAA,EAAD,CAAMC,GAAI,CAAEC,MAAO,IAAKC,OAAQ,IAAKC,QAAS,EAAGC,UAAW,qCAA5D,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CACIC,UAAU,MACVC,MAAOpB,EAAYA,EAAUqB,gBAAkB,GAC/CC,IAAI,MACJT,MAAM,MACNC,OAAO,QAEX,eAACS,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKP,UAAU,MAAhD,SACKnB,EAAYA,EAAUI,KAAO,KAElC,qBAAKuB,MAAO,CAAEC,SAAU,SAAUd,OAAQ,IAA1C,SACI,cAACU,EAAA,EAAD,CAAYE,QAAQ,QAAQG,MAAM,iBAAlC,SACK7B,EAAYA,EAAU8B,YAAc,gBAhB1B9B,EAAUI,WCnB7D,IAQM2B,EAAU,CACZC,OAAQ,MACRC,QAAS,CAAE,mBAAoB,mBAG7BC,EAAS,uCAAG,wCAAAC,EAAA,sDACZC,EAAU,GACLC,EAAE,EAFK,YAEHA,EAAE,GAFC,iCAINhC,EAAK,GAAKiC,KAAKC,MAAsB,IAAhBD,KAAKE,UACxBC,EALI,oBAKuBpC,GAE3BqC,EApBM,2DAoBYD,EApBZ,cAID,kBASD,SAQaE,MAAMD,EAAKX,GARxB,cAQJa,EARI,iBASSA,EAASC,OATlB,QASJhD,EATI,OAUVuC,EAAUU,KAAKjD,EAAKA,MAVV,kDAYVY,QAAQC,IAAR,MAZU,QAEC2B,IAFD,gDAeTD,GAfS,0DAAH,qDAkBA,SAASW,IAEtB,MAAwBC,mBAAS,IAAjC,mBAAOnD,EAAP,KAAaoD,EAAb,KAUA,OARAC,qBAAU,WACN,IAAMC,EAAO,uCAAG,4BAAAhB,EAAA,sEACWD,IADX,OACNU,EADM,OAEZK,EAAQL,GAFI,2CAAH,qDAIbO,MACD,IAGD,cAAC,EAAD,CAAYtD,KAAMA,I,YCtChBkC,G,MAAU,CACZC,OAAQ,MACRC,QAAS,CAAE,mBAAoB,oBAGpB,SAASmB,EAAT,GAA4B,IAAP/C,EAAM,EAANA,GAChC,EAAwB2C,mBAAS,IAAjC,mBAAOnD,EAAP,KAAaoD,EAAb,KAEMf,EAAS,uCAAG,kCAAAC,EAAA,sEAEJM,EAFI,oBAEuBpC,GAC3BqC,EAlBE,2DAkBgBD,EAlBhB,cAID,kBAWG,SAIaE,MAAMD,EAAKX,GAJxB,cAIJa,EAJI,gBAKSA,EAASC,OALlB,cAKJhD,EALI,yBAOHA,EAAKA,MAPF,kCASVY,QAAQC,IAAR,MATU,0DAAH,qDAkBfwC,qBAAU,WACN,IAAMC,EAAO,uCAAG,4BAAAhB,EAAA,sEACWD,IADX,OACNU,EADM,OAEZK,EAAQL,GAFI,2CAAH,qDAIbO,MACD,IAEH,IAAME,EAAS,CACXvC,OAAQ,IACRD,MAAO,IACPyC,gBAAgB,OAAD,OAASzD,EAAKwB,gBAAd,KACfkC,eAAgB,QAChBC,iBAAkB,YAClBC,mBAAoB,UAGxB,OACI,mCACA,qBAAK9B,MAAO0B,MClDJ,CAAC,KAAM,MAAO,KAAM,KAAM,MAAO,MAAO,MAAO,MAAO,MAAO,MACzDtD,KAAI,SAAC2D,EAASC,GAAV,OAAoB,cAAC,IAAD,CAAOA,MAAOA,EAAd,SAAqB,cAAC,EAAD,CAAItD,GAAIqD,SCS1DE,MATf,WACE,OACE,mCAEA,cAAC,EAAD,OCLJC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.6bd46102.chunk.js","sourcesContent":["import React from 'react';\r\nimport TinderCard from 'react-tinder-card';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Typography from '@mui/material/Typography';\r\nimport { CardActionArea } from '@mui/material';\r\n\r\nexport default function TinderProfileCard({ data }) {\r\n\r\n    const swiped = (direction, name, id) => {\r\n        if (direction === 'right') {\r\n            localStorage.setItem(id, name)\r\n        }\r\n    }\r\n\r\n    const outOfFrame = (name) => {\r\n        console.log(name + ' left the screen!')\r\n    }\r\n\r\n    return (\r\n        <div className='profile'>\r\n            {data.map((character) =>\r\n                <TinderCard className='swipe' key={character.name} onSwipe={(dir) => swiped(dir, character.name, character.id)} onCardLeftScreen={() => outOfFrame(character.name)}>\r\n                    <Card sx={{ width: 300, height: 500, padding: 1, boxShadow: '0px 0px 30px 0px rgba(0,0,0,0.20)' }}>\r\n                        <CardActionArea>\r\n                            <CardMedia\r\n                                component='img'\r\n                                image={character ? character.display_picture : ''}\r\n                                alt='img'\r\n                                width='300'\r\n                                height='400'\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom variant=\"h6\" component=\"div\">\r\n                                    {character ? character.name : ''}\r\n                                </Typography>\r\n                                <div style={{ overflow: \"hidden\", height: 40 }}>\r\n                                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                        {character ? character.description : ''}\r\n                                    </Typography>\r\n                                </div>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </TinderCard>\r\n            )}\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport TinderCard from './ProfileCard';\r\n\r\n//this is a function to generate proxyURL\r\nconst getProxyURL = (endPoint) =>\r\n    `https://shrill-cloud-4f83.wenjie-teo.workers.dev/${endPoint}?ga_proxy=`;\r\n\r\n//this is the api base URL\r\nconst apiBaseURL = \"mywaifulist.moe\";\r\n\r\n//anything after base url\r\n\r\nconst options = {\r\n    method: \"GET\",\r\n    headers: { \"x-requested-with\": \"XMLHttpRequest\" },\r\n};\r\n\r\nconst fetchData = async () => {\r\n  let dataArray=[]\r\n  for (let i=0;i<8;i++){\r\n    try {\r\n        let id = 25 * Math.floor(Math.random() * 860)\r\n        const apiEndPoint = `api/waifu/${id}`;\r\n\r\n        const URL = getProxyURL(apiEndPoint) + apiBaseURL;\r\n        const response = await fetch(URL, options);\r\n        const data = await response.json();\r\n        dataArray.push(data.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  return dataArray;\r\n};\r\n\r\nexport default function ProfileCard() {\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n      const getData = async () => {\r\n          const response = await fetchData();\r\n          setData(response);\r\n      };\r\n      getData();\r\n  }, []);\r\n\r\n  return (\r\n    <TinderCard data={data} />\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\n\r\n//this is a function to generate proxyURL\r\nconst getProxyURL = (endPoint) =>\r\n    `https://shrill-cloud-4f83.wenjie-teo.workers.dev/${endPoint}?ga_proxy=`;\r\n\r\n//this is the api base URL\r\nconst apiBaseURL = \"mywaifulist.moe\";\r\n\r\n//anything after base url\r\nconst options = {\r\n    method: \"GET\",\r\n    headers: { \"x-requested-with\": \"XMLHttpRequest\" },\r\n};\r\n\r\nexport default function FetchData({ id }) {\r\n    const [data, setData] = useState([]);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const apiEndPoint = `api/waifu/${id}`;\r\n            const URL = getProxyURL(apiEndPoint) + apiBaseURL;\r\n            const response = await fetch(URL, options);\r\n            const data = await response.json();\r\n            // console.log(data.data);\r\n            return data.data;\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    // const clickHandler = async () => {\r\n    //     const response = await fetchData();\r\n    //     setData(response);\r\n    // }\r\n\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            const response = await fetchData();\r\n            setData(response);\r\n        };\r\n        getData();\r\n    }, []);\r\n\r\n    const styles = {\r\n        height: 210,\r\n        width: 200,\r\n        backgroundImage: `url(${data.display_picture})`,\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div style={styles}/>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n/* <button onClick={clickHandler}>Random</button> */","import React from 'react';\r\nimport { CarouselProvider, Slider, Slide } from 'pure-react-carousel';\r\nimport 'pure-react-carousel/dist/react-carousel.es.css';\r\nimport Ad from './AdApi';\r\n\r\nconst arrList = [2625, 15050, 4329, 9617, 15499, 13431, 17318, 15322, 13346, 7025]\r\nconst ads = arrList.map((element, index) => <Slide index={index}><Ad id={element} /></Slide>)\r\n\r\nexport default function Carousel() {\r\n    return (\r\n        <>\r\n            <div style={{ height: 210, width: 200 }}>\r\n                <CarouselProvider\r\n                    naturalSlideWidth={20}\r\n                    naturalSlideHeight={21}\r\n                    totalSlides={10}\r\n                    isPlaying={true}\r\n                    interval={2500}\r\n                >\r\n                    <Slider>\r\n                        {ads}\r\n                    </Slider>\r\n                </CarouselProvider>\r\n            </div>\r\n        </>\r\n    );\r\n}","import \"./App.css\";\r\nimport Profile from \"./components/Profile/ProfileApi\"\r\nimport AdCard from \"./components/Ad/AdCard\"\r\n\r\nimport './App.css'\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n    {/* <AdCard/> */}\r\n    <Profile/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}